<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>AI POC</title>
<link rel="stylesheet" href="resc/bootstrap.min.css">
<link rel="stylesheet" href="resc/font-awesome.css" />
<link rel="stylesheet" href="resc/theme.css" />

<link href="css/style.css" type="text/css" rel="stylesheet" />
<link href="css/font-awesome.min.css" type="text/css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css?family=PT+Sans"
	rel="stylesheet">
<script src="resc/angular.min.js"></script>
<script src="resc/angular-sanitize.min.js"></script>
<script src="resc/ui-bootstrap-tpls-2.5.0.min.js"></script>
<script src="resc/jquery.min.js"></script>
<script src="resc/bootstrap.min.js"></script>
<script>
		'use strict';
		angular.module('appSolr', ['ui.bootstrap','ngSanitize'])
			.controller('ctrlSolrResults', function($scope, $http, $sce,$rootScope) {
				$scope.caseFormDisplay = false;
				$scope.searchURL = '/AI-Demo/jsps/searchWrapper.jsp';
				$scope.recURL = '/AI-Demo/jsps/recWrapper.jsp';
				$scope.recCaro = { interval: 5000, wrap: false };
				// options related to typeahead
				$scope.modelOptions = {
					debounce: {	default: 500, blur: 250 }
				};
				$scope.pageBack = 'landing';
				// guid generator to be used for creating a searchID for each search session
				$scope.guidGen = function() {
					var strOut = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
						var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
						return v.toString(16);
					});
					return strOut;
				};
				// this is a generic set of preferences and params used in SOLR requests
				$scope.config = {
					jsonpCallbackParam: 'JSON_CALLBACK',
					headers: { },
					// standard query params
					params: { q: '', start: 0, count: 10, sortField: 'score', filterQuery: '', searchId: $scope.guidGen(), callback: 'JSON_CALLBACK', sortBy: 'desc', ml: true },
					pref : { pageLayout: 'normal', container: 'container-fluid', fontSize: 1.3, docId: '', user: '1', filters: { display: false, type: 'left' } }
				};
				// stores selected filters
				$scope.aq = [];
				$scope.details = { response: { numfound:0 } };

				// not currently in use, for a future feature
				/*
				$scope.layouts = {
					left: { filterColumn: 'col-xs-12 col-sm-4 col-md-3 hidden-xs', resultsColumn: 'col-xs-12 col-sm-8 col-md-9', tileColumns: 2},
					filterBar: { filterColumn: 'hidden', resultsColumn: 'col-xs-12', tileColumns: 3},
					none: { filterColumn: 'hidden', resultsColumn: 'col-xs-12', tileColumns: 3}
				};
				*/
				$scope.detailColsDefault = {col1:'col-sm-4 col-md-3 hidden-xs',col2:'col-xs-12 col-sm-8 col-md-9'};
				$scope.detailColsOneResult = {col1:'hidden',col2:'col-xs-12'};
				$scope.detailCols = angular.copy($scope.detailColsDefault);

				$scope.filterCollapsed=[true,true,true,true,true];
				prefLoad();		
				$scope.$watch('config.params', function() { fetch(); }, true); // perform a search when some aspect of the search model changes
				$scope.$watch('config', function() { prefSave(); }, true); // save preferences when some aspect of preference changes, as these are both in what goes to the search api and purely UI elements, we are observing the entire config model
				
				// pagination related variables and functions
				$scope.total = 0; // default the number of results to 0
				$scope.pagination = { currentPage:  1 }; // default the page we are on to 1
				// function to alter the page we are on when the user clicks one of the pagination buttons
				$scope.pageChanged = function() {
					$scope.config.params.start = ($scope.pagination.currentPage==1) ? 0 : ($scope.pagination.currentPage-1)*$scope.config.params.count;
				};
				// what is the highest result number on the page
				$scope.pageMax = function() {
					return ((($scope.pagination.currentPage*$scope.config.params.count))>$scope.total) ? $scope.total : ($scope.pagination.currentPage*$scope.config.params.count);
				};
				
				
				$scope.formatDate = function(date){
					return (Object.prototype.toString.call(new Date(date)) === "[object Date]") ? new Date(date) : new Date(date.split("-").join("/"));
				};
				
				//Applying background images Dynamically
				var backgroundImageList=['loginbg.jpg'];
				var applyImage=backgroundImageList[Math.floor(Math.random() * backgroundImageList.length)];
				$rootScope.setBackground=function(){
					return{
						'background-image':'url(images/'+applyImage+')'
					}
				}
				
				
				function prefLoad() {
					//console.log($scope.layouts['left']);
					var strSrchPrefCookie = getCookie('srchPref');
					if (null!=strSrchPrefCookie && strSrchPrefCookie.length>0) {
						$scope.config = JSON.parse(strSrchPrefCookie);
						$scope.config.params.searchId = $scope.guidGen();
						//console.log(strSrchPrefCookie);
					}	
				}
				function prefSave() {
					if ($scope.config) {
						// don't save the question or filter
						var objPref = angular.copy($scope.config);
						objPref.params.q='';
						objPref.params.filterQuery='';
						objPref.pref.docId='';
						objPref.params.searchId='';
						setCookie('srchPref',JSON.stringify(objPref),7);
					}
				}
				$scope.caseFormInit = function() { 
					if ($scope.details && $scope.details.facet_counts && $scope.details.facet_counts.facet_fields) $scope.filterFields = angular.copy($scope.details.facet_counts.facet_fields);
					$scope.caseFormDisplay = true;
				};
				$scope.caseFormDestroy = function() { 
					$scope.caseFormDisplay = false;
					//console.log($scope.caseFormDisplay);
				};
				function fetch() {
					if ($scope.config.params && $scope.config.params.q.length>0) {
						$scope.pageBack = '';
						if ($scope.config.params.start===0) $scope.pagination.currentPage = 1;
						$http.jsonp($scope.searchURL,$scope.config)
							.then(function(response) {
								if ($scope.detail) $scope.detail = null;
								$scope.total = response.data.response.numFound;
								$scope.details = response.data;
								
								console.log($scope.details.facet_counts.facet_fields);
								
								// if there is only one response, let's jump directly to it
								if (response.data.response.numFound===1)  {
									$scope.detailCols = angular.copy($scope.detailColsOneResult);
									$scope.detail = response.data.response.docs[0];
									fetchRec(response.data.response.docs[0].id);
								} else {
									$scope.detailCols = angular.copy($scope.detailColsDefault);
								}
							});
					}
				}
				fetchRec(''); // retreive user recommendations when page is first loaded
				function fetchRec(itemId) {
					$scope.recs = null;
					var confRec = { params: { callback: 'JSON_CALLBACK' } };
					if (null==itemId || ''==itemId) {
						confRec.params.userId = $scope.config.pref.user; 
					} else {
						confRec.params.itemId = itemId;
					}
					$http.jsonp($scope.recURL,confRec)
						.then(function(response) {
							var ids = '';
							for(var i=0;i<response.data.length;i++) {
								ids += 'id:'+ ((response.data[i].itemId) ? response.data[i].itemId : response.data[i].recItemId) +' or ';
							}
							if (ids.length>0) {
								
								ids = ids.substring(0,ids.length-4);
								var confDocs = { params: { recs: ids, callback: 'JSON_CALLBACK' } };
								$http.jsonp($scope.searchURL,confDocs)
									.then(function(response) {
										$scope.recs = response.data;
										console.log('hhhhh');
										console.log($scope.recs);
									});
							} 
						});
					
				}
				$scope.fetchDetail = function(id){
					if (null!=id) {
						$scope.config.pref.docId = id;
						$scope.rsltsStart = (id-2>-1) ? id-2 : 0;
						$scope.rsltsEnd = $scope.rsltsStart+5;
						$scope.detail = $scope.details.response.docs[id];
						fetchRec($scope.detail.id);
			
						// track this clickthrough
						var clickConfig = { 
							params: { linkPosition: id, title: $scope.detail.title, docId: $scope.detail.id, searchId: $scope.config.params.searchId}
						};
						
						$http.get('/AI/jsps/clickthrough.jsp',clickConfig)
							.then(function(response) {
								//console.log(response.data);
							});
					} 
				};
				$scope.fetchDetailRemote = function(id){
					if (null!=id) {
						fetchRec(id);
						var conf = { params: { id: id, callback: 'JSON_CALLBACK', searchId: $scope.config.params.searchId } };
						$http.jsonp($scope.searchURL,conf)
							.then(function(response) {
								$scope.detail = response.data.response.docs[0];
							});			
					} 
				};
				$scope.detailClear = function(){ $scope.detail=''; $scope.config.pref.docId=''; $scope.recs=null; };
				$scope.setParam = function(param,val) {
					$scope.config.params.start=0;
					$scope.currentPage = 0;
					if(param=='pageLayout') {
						$scope.config.pref.pageLayout = val;
					} else if(param=='sortField') {
						$scope.config.params.sortField = val;
					} else if(param=='count') {
						$scope.config.params.count = val;
					} else if(param=='container') {
						$scope.config.pref.container = val;
					} else if(param=='user') {
						$scope.config.pref.user = val;
					} else if(param=='ml') {
						$scope.config.params.ml = val;
					}
				};
				$scope.toggleAQ = function(param,val) {
					$scope.config.params.start=0;
					if (!$scope.aq[param]) $scope.aq[param]=[]; 
			
					if ($scope.aq[param].indexOf(val)>-1) {
						var numValLoc = $scope.aq[param].indexOf(val);
						$scope.aq[param].splice(numValLoc,1);
					} else {
						$scope.aq[param].splice($scope.aq[param],0,val);
					}
					$scope.config.params.filterQuery = aqToString();
				};
				function aqToString() {
					//{!tag=doc}docType:("FAQ") AND {!tag=kb}kbType:("Knowledge Base" OR "YouTube")
					var strOut = '';
					if (fnObjSize($scope.aq)>0) {
						var key;
						for (key in $scope.aq) {
							if ($scope.aq[key].length>0) {
								var strChildren = '';
								for (var kid in $scope.aq[key]) strChildren += '"' + $scope.aq[key][kid] + '" OR ';
								strOut += '{!tag=' + key.replace('Type','') + '}' + key+ ':(' + strChildren.slice(0,-4) + ')';
							}
							strOut += ' AND ';
						}
						strOut = strOut.slice(0,-4);
					} 
					return strOut;
				}
				$scope.resultIndex = function(val) {
					var indexArray = $scope.details.response.docs.map(function(o){return o.id;});
					var resultIndex = indexArray.indexOf(val);
					return resultIndex;
				};
				$scope.select = function() {
					this.setSelectionRange(0, this.value.length);
				}
				$scope.validSearchFilter = function(val){ 
					return (null!= val && val.count>0) ? true : null; 
				}
				$scope.fetchSuggestion = function(val) {
					return $http.jsonp($scope.searchURL, {
						params: {q: val+'*', callback: 'JSON_CALLBACK'}
					}).then(function(data){
						return data.data.response.docs.map(function(item){
							return item.title;
						});
					});
				};
				$scope.trustSrc = function(src) {
					if (src.indexOf('youtube')>0) src = src.replace('watch?v=','embed/');
					return $sce.trustAsResourceUrl(src);
				};
				$scope.movieStars = function(num) {
					var stars = '';
					var numStarsRemaining = 5;
					var numWholeStars = Math.round(num/2);
					var binHalfStar = ((Math.round((num/2)*10)/10) % 1)>4;
					for (var i=0;i<numWholeStars;i++) { stars += '<i class="fa fa-star"></i>'; numStarsRemaining--; }
					if (binHalfStar) { stars += '<i class="fa fa-star-half-o"></i>'; numStarsRemaining--; }
					for (var i=0;i<numStarsRemaining;i++) stars += '<i class="fa fa-star-o"></i>';
					
					return stars;
				};	
				$scope.fileUpload = { loader: 'hidden', statusError: 'hidden', input: '' };
				$scope.fileUploader = function () {
					if ($scope.fileSearch) {
						$scope.fileUpload = { loader: '', statusError: 'hidden', input: 'hidden' };
						$http({
							method: 'POST',
							url: '/imagerecog/airest/services/image/upload',
							headers: {
								'Content-Type': undefined 
							},
							data: {
								file: $scope.fileSearch
							},
							transformRequest: function (data, headersGetter) {
								var formData = new FormData();
								angular.forEach(data, function (value, key) {
									formData.append(key, value);
								});
								//var headers = headersGetter();
								//delete headers['Content-Type'];
								return formData;
							}
						})
						.then(function (response) {
							$scope.fileUpload = { loader: 'hidden', statusError: 'hidden', input: '' };
							$scope.config.params.q=response.data.name;
							$('#imgUpload').modal('toggle');	
							//console.log(response);
						},function(response){
							// error
							$scope.fileUpload = { loader: 'hidden', statusError: 'error', input: '' };
						});
					}
				};
				$scope.uploadImg = function( files ) {
					$scope.fileSearch = files[0];
					$scope.fileUploader();
				};
			})
			.directive("rsltPanel", function() {
				return {
				
					template : '<div class="panel panel-default"><div class="panel-body"><img src="{{rslt.thumbnailImage}}" class="pull-right" style="max-width: 45px" ng-if="rslt.thumbnailImage" /><h3 class="panel-title"><a ng-click="fetchDetail(pos)">{{rslt.title}}</a></h3><rslt-meta rslt="rslt"></rslt-meta><p class="mb-1 excerpt" ng-bind-html="rslt.body.shortDescription"></p></div></div>',
					link: function (scope, element, attrs) {
						if(attrs.rslt){
							scope.rslt = scope.$eval(attrs.rslt);
						}
						if(attrs.pos){
							scope.pos = scope.$eval(attrs.pos);
						}
					}
				};
			})
			.directive("rsltMeta", function() {
				return {
					templateUrl : 'rsltMeta.htm',
					link: function (scope, element, attrs) {
						if(attrs.rslt) {
							// put entire result into this directive's scope
							scope.rslt = scope.$eval(attrs.rslt);
							//scope.num = Math.round((scope.rslt.vote_average/2)*10)/10;
							//scope.stars = scope.movieStars(scope.rslt.vote_average);
						}
					}
				};
			})
			.directive("rsltMovie", function() {
				return {
					templateUrl : 'rsltMovie.htm',
					link: function (scope, element, attrs) {
						if(attrs.rslt) 
							scope.rslt = scope.$eval(attrs.rslt);
					}
				};
			})
			.directive("rsltExcerpt", function() {
				return {
					template : '<p ng-bind-html="rslt.body.shortDescription"></p>',
					link: function (scope, element, attrs) {
						if(attrs.rslt) scope.rslt = scope.$eval(attrs.rslt);
						/*
						if(attrs.highlight && attrs.highlight.length>0) {
							var tmpObj = scope.$eval(attrs.highlight);
							if (tmpObj[scope.rslt.id] && tmpObj[scope.rslt.id].content) scope.rslt.excerpt = tmpObj[scope.rslt.id].content;
						}
						*/
					}
				};
			});
			// cookie methods to power the storing and reading of preferences
			function setCookie(cname,cvalue,exdays) {
				let d = new Date();
				d.setTime(d.getTime() + (exdays*24*60*60*1000));
				let expires = "expires=" + d.toString();
				document.cookie = cname+"="+cvalue+"; "+expires;
			}

			function getCookie(cname) {
				let name = cname + "=";
				let ca = document.cookie.split(';');
				for(let i=0; i<ca.length; i++) {
					let c = ca[i];
					while (c.charAt(0)==' ') {
						c = c.substring(1);
					}
					if (c.indexOf(name) == 0) {
						return c.substring(name.length, c.length);
					}
				}
				return "";
			}
			function fnObjSize(obj) { var size = 0, key; for (key in obj) { if (obj.hasOwnProperty(key)) size++; } return size; }
			
			$(function() {

				$(".search-settings").click(function() {
					//alert("sdf");
					$(this).find(".searchsettings-popup").on("click", function(e) {
						e.stopPropagation();
					})
					if (!$(this).find(".searchsettings-popup").is(":visible")) {
						$(this).find(".searchsettings-popup").fadeIn(100);
						$(this).find(".searchsettings-popup").animate({
							"top" : "65px"
						}, 350);
					} else {
						$(this).find(".searchsettings-popup").animate({
							"top" : "90px"
						}, 350);
						$(this).find(".searchsettings-popup").fadeOut(200);

					}

				});

				$(".mltogglebtn").click(function() {
					if ($(this).hasClass("disabled")) {
						$(this).removeClass("disabled").addClass("enabled");
					} else {
						$(this).removeClass("enabled").addClass("disabled");
					}
				})

				$.fn.switchactive = function(e) {
					//alert("hihihi");
					var def = {
						activeclass : 'active',
						inactiveclass : 'inactive',

					};
					var obj = $.extend(def, e);

					var thiss = $(this);
					thiss.addClass("switchactive");
					$(this).find("button").addClass("" + obj.inactiveclass + "")
					$(this).find("button").on(
							"click",
							function() {
								thiss.find("button").removeClass(
										"" + obj.activeclass + "").addClass(
										"" + obj.inactiveclass + "");
								if ($(this).hasClass("" + obj.inactiveclass + "")) {
									//alert(1);

									$(this)
											.removeClass(
													"" + obj.inactiveclass + "")
											.addClass("" + obj.activeclass + "")

								} else {
									//alert(2);
									$(this).removeClass("" + obj.activeclass + "")
											.addClass("" + obj.inactiveclass + "")
								}

							});

				}

				$(".sortby_inner").switchactive();

			});

	</script>
<style>
.hidden {
	display: none;
}

.error {
	color: #f00;
}

.success {
	color: #0f0;
}

.row {
	margin: 12px 0px
}

.collapsable {
	display: inline-block;
	overflow: hidden;
	height: 0;
	transition: height 1s;
	-webkit-transition: height 1s;
	-moz-transition: height 1s;
	-o-transition: height 1s;
}

.collapsable.showMe {
	height: 100%;
}

@media ( min-width : 992px) {
	.equal {
		display: -webkit-box;
		display: -moz-box;
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
	}
}

#head {
	background: #151515;
	padding: 0px;
	margin: 0px;
	border-bottom: 1px solid #999;
}

.input-group {
	display: inline-table;
	width: -webkit-fill-available;
}

/* .navbar {
	position: absolute;
	left: 0px;
	margin-bottom: 15px;
} */
.list-inline {
	padding-left: 10px;
}

/* .navbar-inverse {
	border-color: none;
}

#hideElement {
	border-radius: 18px;
	opacity: 0.8;
}

.navbar-inverse {
	border: none;
	opacity: 0.8;
	border-style: none;
} */
.landing #searchBox input,.landing #searchBox button {
	height: 50px;
}

body {
	padding: 0;
	margin: 0;
	font-family: 'PT Sans', sans-serif;
}

form,button,input {
	font-family: 'PT Sans', sans-serif;
}

input:focus,button:focus {
	outline: 0;
}

.logininput input[type="text"] {
	padding: 14px;
	height: 46px;
	border: 0;
	position: absolute;
	border-radius: 5px 0 0 5px;
	margin-top: 18px;
}

.search-settings:focus,.search-settings button:focus {
	color: #000
}

.search-settings {
	background: #d7e0fd;
	min-height: 46px;
	float: left;
}

a.search-settings>.settingsbtn {
	line-height: 40px;
	padding: 0 0px;
	font-size: 22px;
	background: url('images/sprite.png') no-repeat -12px -12px;
	width: 25px;
	height: 40px;
	margin: 10px 10px 0 10px;
	display: inline-block;
}

.searchsettings-popup {
	text-align: center;
	display: none;
	position: absolute;
	top: 90px;
	background: #fff;
	width: 292px;
	padding: 25px;
	border-radius: 5px;
	z-index: 100;
}

.searchsettings-popup h1 {
	font-size: 20px;
	text-align: center;
	color: #16a086;
	margin: 0;
	display: inline-block;
	padding: 0 0 5px 0;
	border-bottom: solid 4px #16a086;
}

.searchsettingscontent {
	width: 100%;
	float: left;
	height: 250px;
	overflow-y: auto
}

.searchsettingicon {
	background: url('images/sprite.png') no-repeat -47px -14px;
	width: 16px;
	height: 16px;
	display: inline-block;
	margin-right: 7px;
}

.mltogglebtn.disabled {
	background: #eee;
	color: #8c8c8c;
}

.mltogglebtn.enabled {
	background: #16a086;
	color: #fff !important;
}

.mltogglebtn {
	cursor: pointer;
	padding: 10px 15px;
	margin-top: 15px;
	border: none;
	font-size: 20px;
}

.mltogglebtn.disabled::before {
	border: solid 3px #888;
}

.mltogglebtn.enabled::before {
	border: solid 3px #fff;
}

.mltoggle {
	border-bottom: solid 1px #dedede;
	padding-bottom: 20px;
}

.mltogglebtn::before {
	content: '';
	width: 15px;
	height: 15px;
	background: none;
	float: left;
	border-radius: 30px;
	background: none;
	margin-right: 10px;
	margin-top: 2px;
}

.switchactive button {
	border: none;
	padding: 10px;
	float: left;
}

.switchactive button::before {
	content: '';
	width: 12px;
	height: 12px;
	background: none;
	float: left;
	border-radius: 30px;
	background: none;
	margin-right: 5px;
	margin-top: 2px;
}

.switchactive button.active {
	background: #16a086;
	color: #fff;
}

.switchactive button.inactive::before {
	border: solid 3px #888;
}

.switchactive button.active::before {
	border: solid 3px #fff;
}

.recommended {
	position: fixed;
	bottom: 0;
	width: 100%;
}

.recommended h1 {
	color: #fff;
	margin: 0;
	left: 20%;
	height: 48px;
	width: 277px;
	float: none;
	line-height: 48px;
	text-align: center;
	background: url('images/recommended.png') left top no-repeat;
	position: relative;
	font-weight: normal;
	font-size: 15px;
}

.recommended ul {
	background-color: rgba(0, 0, 0, .4);
	padding: 25px;
	clear: both;
	float: left;
	width: 100%;
	margin: 0;
	list-style: none;
}

.recommended ul li {
	float: left;
	width: 20%;
	text-align: center;
}

.sortby {
	padding: 15px 0;
	text-align: left;
	float: left;
	width: 100%;
}

.sortby label {
	margin-bottom: 10px;
	margin-top: 10px;
	float: left;
	width: 100%;
}

.searchsettings-popup .arrowpopup {
	top: -15px;
	position: absolute;
	font-size: 22px;
	left: 18px;
	color: #fff;
}

button,input,optgroup,select,textarea {
	font: -webkit-small-control;
}
.form-control{
    height: 50px;
}
</style>
</head>
<body ng-app="appSolr" ng-controller="ctrlSolrResults"
	style="font-size: {{config.pref.fontSize" ng-class="pageBack"
	class="img-responsive" ng-style="setBackground()">

	<div class="pull-right" id="caseBtn" ng-if="pageBack!='landing'">
		<button ng-click="caseFormInit()" class="btn btn-default">Create
			a case</button>
	</div>

	<div class="{{config.pref.container}}"
		style="font-size: {{config.pref.fontSize">
		<div class="row">
			<div class="col-xs-12"></div>
		</div>
		<div class="row">
			<div class="col-xs-12"></div>
		</div>
		<div class="row">
			<div class="col-xs-12"></div>
		</div>
		<div class="row">
			<div class="col-xs-12"></div>
		</div>


		<div class="row" id="searchBox">
			<div class="col-xs-4">
				<img src="images/searchlogo.png" alt="login logo"
					class="loginlogo img-responsive" style="float: right;" />
			</div>
			<div class="col-xs-6" style="margin-top: 20px;">
				<div class="input-group search-bar">

					<div class="input-group">
						<input type="text" ng-model="config.params.q"
							ng-model-options="modelOptions" onclick="select()"
							class="form-control" autofocus />
						<div class="input-group-btn">

							<a class="search-settings" href="#"> <span
								class="settingsbtn"></span>

								<div class="searchsettings-popup">
									<div class="arrowpopup fa fa-caret-up"></div>
									<i class="searchsettingicon"></i>
									<h1>Search Settings</h1>

									<div class="searchsettingscontent">
										<div class="mltoggle">
											<button ng-if="config.params.ml==false"
												ng-model="config.params.ml" value="true"
												ng-click="setParam('ml',true)"
												class="mltogglebtn  btn btn-success">Enable ML</button>
											<button class="btn btn-danger mltogglebtn"
												ng-if="config.params.ml==true" ng-model="config.params.ml"
												value="false" ng-click="setParam('ml',false)">Disable
												ML</button>

										</div>

										<div class="sortby">
											<label>Sort By:</label>
											<div class="sortby_inner">
												<button ng-click="setParam('sortField','score')"
													ng-class="{'active': config.params.sortField == 'score'}"
													name="sortField" ng-model="config.params.sortField"
													value="score" autocomplete="off">Most Relevent</button>

												<button ng-click="setParam('sortField','title')"
													ng-class="{'active': config.params.sortField == 'title'}"
													name="sortField" ng-model="config.params.sortField"
													value="title" autocomplete="off">Name</button>

												<button ng-click="setParam('sortField','release_date')"
													ng-class="{'active': config.params.sortField == 'release_date'}"
													name="sortField" ng-model="config.params.sortField"
													value="release_date" autocomplete="off">Date</button>
											</div>


										</div>


										<div class="sortby resultsperpage">
											<label>Results Per Page:</label>

											<div class="sortby_inner">
												<button ng-click="setParam('count','10')"
													ng-class="{'active': config.params.count == '10'}"
													name="perPage" ng-model="config.params.count" value="10"
													autocomplete="off" checked>10</button>
												<button ng-click="setParam('count','25')"
													ng-class="{'active': config.params.count == '25'}"
													name="perPage" ng-model="config.params.count" value="25"
													autocomplete="off">25</button>
												<button ng-click="setParam('count','50')"
													ng-class="{'active': config.params.count == '50'}"
													name="perPage" ng-model="config.params.count" value="50"
													autocomplete="off">50</button>
												<button ng-click="setParam('count','100')"
													ng-class="{'active': config.params.count == '100'}"
													name="perPage" ng-model="config.params.count" value="100"
													autocomplete="off">100</button>
											</div>


										</div>

									</div>


								</div>
							</a>


						</div>
						<div class="input-group-btn">
							<button type="button" class="btn btn-primary"
								style="padding: 10px"15px; font-size: 17px; border-radius: 0 5px 5px 0;">Search</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
		<div ng-if="pageBack==='landing'">

		<div class="row" style="margin-top: 100px"></div>

		<div class="col-xs-12 recommended">
			<!-- <ul class="list-inline">
						
						<li ng-repeat="record in recs.response.docs"
							style="text-align: center;"><a
							ng-click="fetchDetailRemote(record.id)"> <img
								src="{{record.largeImage}}" alt="{{record.title}}"
								title="{{record.title}}" style="max-width: 160px" /></a><br /></li>

					</ul> -->
 			<h1>Recommended
				For You</h1>
			<ul>
				<li><img src="images/m1.png" /></li>
				<li><img src="images/m2.png" /></li>
				<li><img src="images/m1.png" /></li>
				<li><img src="images/m2.png" /></li>
				<li><img src="images/m1.png" /></li>
			</ul>


		</div>

	</div> 

	</div>

	<!-- panel for creating a case -->
	<div ng-if="caseFormDisplay" class="row">
		<div class="col-xs-12 col-sm-6">
			<div class="panel panel-default">
				<div class="panel-heading">Contact Us</div>
				<div class="panel-body">
					<form id="frmContact">
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i class="fa fa-user"
										aria-hidden="true"></i></span> <input type="text"
										class="form-control" name="name" id="name"
										placeholder="John Doe" />
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i
										class="fa fa-envelope" aria-hidden="true"></i></span> <input
										type="text" class="form-control" name="email" id="email"
										placeholder="john.doe@infogain.com" />
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i
										class="fa fa-comment-o" aria-hidden="true"></i></span> <input
										type="text" class="form-control" ng-model="config.params.q"
										name="q" id="q" placeholder="Search query" />
								</div>
							</div>
						</div>
						<div class="form-group col-sm-4"
							ng-repeat="searchFilter in filterFields"
							ng-if="searchFilter.children.length>0" jq-table
							ng-if="filterFields[0].field">
							<label class="control-label" for="{{searchFilter.field}}">{{searchFilter.field}}</label>
							<select name="{{searchFilter.field}}" class="form-control"
								ng-change="toggleAQ(searchFilter.field,temp[searchFilter.field].name)"
								ng-model="temp[searchFilter.field]"
								ng-options="option.name for option in searchFilter.children | filter: validSearchFilter">

							</select>
						</div>
						<div id="n" style="display: block; padding-top: 71px;">
							<div class="form-group">

								<label class="control-label" for="comments">Comments</label>
								<textarea class="form-control" name="comments" id="fComments"
									placeholder="Problem Description"></textarea>
							</div>
						</div>
						<div class="form-group">
							<button class="btn btn-primary" ng-click="caseFormDestroy()">Create</button>
							<button class="btn btn-default" ng-click="caseFormDestroy()">Cancel</button>
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class="col-xs-12 col-sm-6" id="rslts">
			<div class="list-group">
				<div ng-repeat="record in details.response.docs"
					ng-click="fetchDetail($index)" class="list-group-item">
					<h4 class="group inner list-group-item-heading">
						{{record.title}}</h4>
					<rslt-meta rslt="record"></rslt-meta>
					<p class="group inner list-group-item-text">
						<rslt-excerpt rslt="record" highlight="details.highlighting"></rslt-excerpt>
					</p>
				</div>
			</div>
		</div>
	</div>
	<div
		ng-if="!caseFormDisplay && details.response.numFound > 0 && !detail"
		class="row">
		<div class="col-xs-12 col-sm-4 col-md-3 hidden-xs" id="filters">
			<div class="panel panel-default" ng-if="recs" id="recs">
				<div class="panel-heading">Recommended for you</div>
				<!--<div class="list-group">
					<a ng-click="fetchDetailRemote(record.id)" class="list-group-item" ng-repeat="record in recs.response.docs">{{record.title}} (<span ng-bind="formatDate(record.release_date) | date:'yyyy'"></span>) <img src="https://image.tmdb.org/t/p/w300/{{record.poster_path}}" alt="poster" class="pull-right" style="max-width: 25px" /></a>
				</div>-->
				<!--<div class="panel-body"><ul class="list-inline">
					<li ng-repeat="record in recs.response.docs"><a ng-click="fetchDetailRemote(record.id)"><img src="https://image.tmdb.org/t/p/w300/{{record.poster_path}}" alt="poster" style="max-width: 45px" /></a><br />({{record.vote_average}}/10)</li>
				</ul></div>-->
				<div uib-carousel active="active" interval="recCaro.interval"
					no-wrap="recCaro.wrap">
					<div uib-slide ng-repeat="slide in recs.response.docs"
						index="$index" style="height: 115px">
						<a ng-click="fetchDetailRemote(slide.id)"> <img
							ng-src="{{slide.thumbnailImage}}"
							style="margin: auto; max-height: 150px">
							<div class="carousel-caption">
								<h4>{{slide.title}}</h4>
								<!--<p ng-bind-html="movieStars(slide.vote_average)"></p>-->
							</div>
						</a>
					</div>
				</div>
			</div>
			<!-- This is used when filters are in a more usable from in the response -->
			<div class="panel panel-default"
				ng-repeat="searchFilter in details.facet_counts.facet_fields"
				ng-if="searchFilter.children.length>0">
				<div class="panel-heading">{{searchFilter.field}}</div>

				<div class="list-group">
					<a ng-click="toggleAQ(searchFilter.field,val.name)"
						class="list-group-item"
						ng-repeat="val in searchFilter.children | filter: validSearchFilter | limitTo: 5"
						ng-class="{active: config.params.filterQuery.indexOf(val.name)>-1}">{{val.name}}
						<span class="badge" ng-class="{'badge-warning': val.count>30}">{{val.count}}</span>
					</a> <a class="list-group-item" data-toggle="modal"
						data-target="#{{searchFilter.field}}"
						ng-if="searchFilter.children.length>5">+ More</a>
				</div>
			</div>
			<!-- This is used when filters are in the standard configuration -->
			<div class="panel panel-default"
				ng-repeat="(key, val) in details.facet_counts.facet_fields"
				ng-if="val.length>0" jq-table
				ng-if="details.facet_counts.facet_fields.kbType">
				<div class="panel-heading">{{key}}</div>
				<div class="list-group">
					<a ng-click="toggleAQ(key,filter)" class="list-group-item"
						ng-repeat="filter in val track by $index"
						ng-class="{active: config.params.filterQuery.indexOf(filter)>-1}"
						ng-if="$index % 2 == 0 && val[$index+1]>0"> {{filter}} <span
						class="badge" ng-class="{'badge-warning': val[$index+1]>30}">{{val[$index+1]}}</span>
					</a>
				</div>
			</div>
		</div>
		<div class="col-xs-12 col-sm-8 col-md-9"
			ng-if="config.pref.pageLayout=='normal'" id="rslts">
			<div id="products" class="row list-group">

				<div ng-repeat="record in details.response.docs"
					ng-click="fetchDetail($index)"
					class="item col-xs-4 col-lg-4 list-group-item">
					<div class="thumbnail">
						<img class="group list-group-image" src="{{record.largeImage}}"
							alt="poster" style="max-width: 55px"
							ng-if="record.largeImage && record.largeImage!=''" />
						<div class="caption">
							<h4 class="group inner list-group-item-heading">
								{{record.title}}</h4>
							<rslt-meta rslt="record"></rslt-meta>
							<p class="group inner list-group-item-text">


								<!--	
						<div ng-repeat="shT in details.highlighting" class="row equal"  >
									hahahahaha - 	{{shT.shortDescription}}
						</div>
						-->


								<rslt-excerpt rslt="record" highlight="details.highlighting"></rslt-excerpt>
							</p>
						</div>
					</div>
				</div>



			</div>
			<div class="row">
				<div class="col-xs-12 col-sm-4">Displaying
					{{config.params.start+1}} to {{pageMax()}} of
					{{details.response.numFound}}
					({{details.responseHeader.QTime/1000}} secs)</div>
				<div class="col-xs-12 col-sm-8">
					<div ng-show="details.response.numFound > config.params.count"
						class="pull-right">
						<ul uib-pagination total-items="total"
							items-per-page="config.params.count"
							ng-model="pagination.currentPage" ng-change="pageChanged()"
							max-size="5" class="pagination-sm" rotate="true"
							previous-text="&lsaquo;" next-text="&rsaquo;"
							boundary-link-numbers="true"></ul>
					</div>
				</div>
			</div>
		</div>
		<div class="col-xs-12 col-sm-6 col-md-9"
			ng-if="config.pref.pageLayout=='tiled'" id="rslts">
			<div ng-repeat="record in details.response.docs" class="row equal"
				ng-if="$index % 2 == 0">
				<div class="col-sm-12 col-md-6">
					<rslt-panel rslt="details.response.docs[$index+0]" pos="$index+0"
						ng-if="details.response.docs[$index+0]"></rslt-panel>
				</div>
				<div class="col-sm-12 col-md-6">
					<rslt-panel rslt="details.response.docs[$index+1]" pos="$index+1"
						ng-if="details.response.docs[$index+1]"></rslt-panel>
				</div>
			</div>
			<div class="row">
				<div class="col-xs-12 col-sm-4">Displaying
					{{config.params.start+1}} to {{pageMax()}} of
					{{details.response.numFound}}
					({{details.responseHeader.QTime/1000}} secs)</div>
				<div class="col-xs-12 col-sm-8">
					<div ng-show="details.response.numFound > config.params.count"
						class="pull-right">
						<ul uib-pagination total-items="total"
							items-per-page="config.params.count"
							ng-model="pagination.currentPage" ng-change="pageChanged()"
							max-size="5" class="pagination-sm" rotate="true"
							previous-text="&lsaquo;" next-text="&rsaquo;"
							boundary-link-numbers="true"></ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div ng-if="details.response.numFound==0 && !detail" class="row">No
		results found</div>
	<div ng-if="detail" class="row">
		<div class="{{detailCols.col1}}">
			<div class="list-group" ng-if="details.response.numFound>1">
				<a
					ng-repeat="record in details.response.docs | limitTo: 5 : rsltsStart"
					ng-click="fetchDetail(resultIndex(record.id))"
					class="list-group-item" ng-class="{active:record.id===detail.id}">
					{{record.title}} <!--(<span ng-bind="formatDate(record.release_date) | date:'yyyy'"></span>)-->
				</a>
			</div>
		</div>
		<div class="{{detailCols.col2}}">
			<button class="btn btn-default" ng-click="detailClear()">
				Close <i class="fa fa-times"></i>
			</button>
			<div class="row">
				<div class="col-xs-8" id="movieDetail">
					<h1>{{detail.title}}</h1>
					<div class="meta">
						<!-- <span ng-bind="formatDate(detail.release_date) | date:short"></span> | <span ng-bind-html="movieStars(detail.vote_average)"></span> -->
					</div>
					<div ng-bind-html="detail.body.longDescription"></div>
					<dl>
						<dt ng-if="detail.Brand">Brand</dt>
						<dd ng-if="detail.Brand">{{detail.Brand}}</dd>
						<dt ng-if="detail.Department">Department</dt>
						<dd ng-if="detail.Department">{{detail.Department}}</dd>
						<!-- <dd ng-if="detail.Subcategory1"><span >{{detail.Subcategory1}}</span></dd> -->
						<!-- <dt ng-if="detail.Subcategory2">Subcategory2</dt><!--<dt ng-if="detail.Subcategory2.length()===1">Subcategory2</dt>-->
						<!-- <dd ng-if="detail.Subcategory2"><span >{{detail.Subcategory2}}</span></dd> -->
					</dl>
				</div>
				<div class="col-xs-4">
					<div>
						<img src="{{detail.largeImage}}" alt="poster"
							class="pull-left poster img-responsive" ng-if="detail.largeImage" />
					</div>
					<br />
					<div style="text-align: center;">
						<i class="glyphicon glyphicon-link" class="hidden-xs"></i> <a
							href="{{detail.productUrl}}" target="_blank"> View Product </a>
					</div>
					<!--
						  <button class="btn btn-default" type="button" data-toggle="modal" data-target="#mTrailer">
							<i class="glyphicon glyphicon-link" class="hidden-xs"></i> View Product                              
						  </button>
						  -->
				</div>
			</div>
			<div ng-if="recs.response.docs">
				<h4 style="font-size: 21px; font-weight: 600;">Recommendations</h4>
				<ul class="list-inline" style="margin-left: -6%; min-width: 100%;">
					<li ng-repeat="record in recs.response.docs" class="ng-scope"
						style="text-align: center;" ng-if="record.largeImage!='null'"><a
						ng-click="fetchDetailRemote(record.id)"> <img
							src="{{record.largeImage}}" alt="{{record.title}}"
							style="max-height: 120px; max-width: 200px"
							title="{{record.title}}" /></a>
						<hr style="margin-right: -9%;" /> <!--<span ng-bind-html="movieStars(record.vote_average)"></span>-->
						<h3
							style="max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: larger;">
							{{record.title}}</h3></li>
				</ul>
			</div>
		</div>
	</div>
	</div>
	</div>

	<!-- MORE facets overlays -->

	<div class="modal fade" tabindex="-1" role="dialog"
		ng-repeat="searchFilter in details.facet_counts.facet_fields"
		aria-labelledby="trailerModalLabel" aria-hidden="true"
		id="{{searchFilter.field}}"
		ng-if="details.facet_counts.facet_fields && !detail && searchFilter.children.length>0">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title pull-left">{{searchFilter.field}}</h4>

					<button type="button" class="close pull-right" aria-label="Close"
						data-dismiss="modal">
						<span aria-hidden="true"><i
							class="glyphicon glyphicon-remove"></i></span>
					</button>
				</div>
				<div class="modal-body">
					<div
						ng-repeat="val in searchFilter.children | filter: validSearchFilter"
						class="row equal" ng-if="$index % 3 == 0">
						<div class="col-xs-12 col-sm-4"
							ng-if="searchFilter.children[$index+0].name && searchFilter.children[$index+0].count>0">
							<button class="btn btn-default"
								ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+0].name)>-1}"
								ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+0].name)"
								data-dismiss="modal">
								{{searchFilter.children[$index+0].name}} <span class="badge">{{searchFilter.children[$index+0].count}}</span>
							</button>
						</div>
						<div class="col-xs-12 col-sm-4"
							ng-if="searchFilter.children[$index+1].name && searchFilter.children[$index+1].count>0">
							<button class="btn btn-default"
								ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+1].name)>-1}"
								ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+1].name)"
								data-dismiss="modal">
								{{searchFilter.children[$index+1].name}} <span class="badge">{{searchFilter.children[$index+1].count}}</span>
							</button>
						</div>
						<div class="col-xs-12 col-sm-4"
							ng-if="searchFilter.children[$index+2].name && searchFilter.children[$index+2].count>0">
							<button class="btn btn-default"
								ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+2].name)>-1}"
								ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+2].name)"
								data-dismiss="modal">
								{{searchFilter.children[$index+2].name}} <span class="badge">{{searchFilter.children[$index+2].count}}</span>
							</button>
						</div>
					</div>

					<!--<a  class="list-group-item"  ng-class="{active: config.params.filterQuery.indexOf(val.name)>-1}">{{val.name}} <span class="badge" ng-class="{'badge-warning': val.count>30}">{{val.count}}</span></a>-->

				</div>
			</div>
		</div>
	</div>

	<!-- MOVIE trailer overlay -->
	<div class="modal fade" tabindex="-1" role="dialog"
		aria-labelledby="trailerModalLabel" aria-hidden="true" id="mTrailer"
		ng-if="detail.trailerVideoUrl">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title pull-left">{{detail.title}}</h4>
					<button type="button" class="close pull-right" aria-label="Close"
						data-dismiss="modal">
						<span aria-hidden="true"><i
							class="glyphicon glyphicon-remove"></i></span>
					</button>
				</div>
				<div class="modal-body">
					<div class="embed-responsive embed-responsive-16by9">
						<iframe class="embed-responsive-item" width="560" height="315"
							ng-src="{{trustSrc(detail.trailerVideoUrl[0])}}" frameborder="0"
							allowfullscreen></iframe>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" tabindex="-1" role="dialog"
		aria-labelledby="searchSettingsModalLabel" aria-hidden="true"
		id="sSettings">
		<form name="frmPref" id="fPref">
			<div class="modal-dialog modal-sm">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title pull-left">Search settings</h4>
						<button type="button" class="close pull-right" aria-label="Close"
							data-dismiss="modal">
							<span aria-hidden="true"><i
								class="glyphicon glyphicon-remove"></i></span>
						</button>
					</div>
					<div class="modal-body">
						<dl>
							<dd>
								<button class="btn btn-success" ng-if="config.params.ml==false"
									ng-model="config.params.ml" value="true"
									ng-click="setParam('ml',true)">Enable ML</button>
								<button class="btn btn-danger" ng-if="config.params.ml==true"
									ng-model="config.params.ml" value="false"
									ng-click="setParam('ml',false)">Disable ML</button>
							</dd>
							<dt>Sort by</dt>
							<dd>
								<div class="btn-group" data-toggle="buttons">
									<label class="btn btn-default"
										ng-click="setParam('sortField','score')"
										ng-class="{'active': config.params.sortField == 'score'}">
										<input type="radio" name="sortField"
										ng-model="config.params.sortField" value="score"
										autocomplete="off" />Most Relevant
									</label> <label class="btn btn-default"
										ng-click="setParam('sortField','title')"
										ng-class="{'active': config.params.sortField == 'title'}">
										<input type="radio" name="sortField"
										ng-model="config.params.sortField" value="title"
										autocomplete="off" />Name
									</label>

									<!--<label class="btn btn-default" ng-click="setParam('sortField','vote_average')" ng-class="{'active': config.params.sortField == 'vote_average'}">
								<input type="radio" name="sortField" ng-model="config.params.sortField" value="vote_average" autocomplete="off" />Stars
							</label>-->
									<!--<label class="btn btn-default" ng-click="setParam('sortField','release_date')" ng-class="{'active': config.params.sortField == 'release_date'}">
								<input type="radio" name="sortField" ng-model="config.params.sortField" value="release_date" autocomplete="off" />Date
							</label>-->
								</div>
							</dd>
							<dt>Results per page</dt>
							<dd>
								<div class="btn-group" data-toggle="buttons">
									<label class="btn btn-default"
										ng-click="setParam('count','10')"
										ng-class="{'active': config.params.count == '10'}"> <input
										type="radio" name="perPage" ng-model="config.params.count"
										value="10" autocomplete="off" checked />10
									</label> <label class="btn btn-default"
										ng-click="setParam('count','25')"
										ng-class="{'active': config.params.count == '25'}"> <input
										type="radio" name="perPage" ng-model="config.params.count"
										value="25" autocomplete="off" />25
									</label> <label class="btn btn-default"
										ng-click="setParam('count','50')"
										ng-class="{'active': config.params.count == '50'}"> <input
										type="radio" name="perPage" ng-model="config.params.count"
										value="50" autocomplete="off" />50
									</label> <label class="btn btn-default"
										ng-click="setParam('count','100')"
										ng-class="{'active': config.params.count == '100'}"> <input
										type="radio" name="perPage" ng-model="config.params.count"
										value="100" autocomplete="off" />100
									</label>
								</div>
							</dd>
							<dt>Layout</dt>
							<dd>
								<div class="btn-group" data-toggle="buttons">
									<label class="btn btn-default"
										ng-click="setParam('pageLayout','normal')"
										ng-class="{'active': config.pref.pageLayout == 'normal'}"
										tooltip-placement="bottom" uib-tooltip="Normal"> <input
										type="radio" name="pageLayout"
										ng-model="config.pref.pageLayout" value="normal"
										autocomplete="off" checked /> <i
										class="glyphicon glyphicon-th-list"></i>
									</label> <label class="btn btn-default"
										ng-click="setParam('pageLayout','tiled')"
										ng-class="{'active': config.pref.pageLayout == 'tiled'}"
										tooltip-placement="bottom" uib-tooltip="Tiled"> <input
										type="radio" name="pageLayout"
										ng-model="config.pref.pageLayout" value="tiled"
										autocomplete="off" /> <i class="glyphicon glyphicon-th"></i>
									</label>
								</div>
							</dd>
							<dt>Width</dt>
							<dd>
								<div class="btn-group" data-toggle="buttons">
									<label class="btn btn-default"
										ng-click="setParam('container','container')"
										ng-class="{'active': config.pref.container == 'container'}"
										tooltip-placement="bottom"
										uib-tooltip="Page has significant gutters at most screen widths">
										<input type="radio" name="container"
										ng-model="config.pref.container" value="container"
										autocomplete="off" checked /> Inset
									</label> <label class="btn btn-default"
										ng-click="setParam('container','container-fluid')"
										ng-class="{'active': config.pref.container == 'container-fluid'}"
										tooltip-placement="right"
										uib-tooltip="Small gutters at all screen widths"> <input
										type="radio" name="container" ng-model="config.pref.container"
										value="container-fluid" autocomplete="off" /> Full
									</label>
								</div>
							</dd>
							<dt>User</dt>
							<dd>
								<div class="btn-group" data-toggle="buttons">
									<label class="btn btn-default" ng-click="setParam('user','1')"
										ng-class="{'active': config.pref.user == '1'}"> <input
										type="radio" name="perPage" ng-model="config.pref.user"
										value="1" autocomplete="off" checked />Joe
									</label> <label class="btn btn-default" ng-click="setParam('user','2')"
										ng-class="{'active': config.pref.user == '2'}"> <input
										type="radio" name="perPage" ng-model="config.pref.user"
										value="2" autocomplete="off" />Ann
									</label> <label class="btn btn-default" ng-click="setParam('user','3')"
										ng-class="{'active': config.pref.user == '3'}"> <input
										type="radio" name="perPage" ng-model="config.pref.user"
										value="3" autocomplete="off" />SK
									</label>
								</div>
							</dd>
							<dt>Font size</dt>
							<dd>
								<input id="sFontSize" ng-model="config.pref.fontSize"
									type="range" min="1" max="2" step="0.1" />
							</dd>
						</dl>
					</div>
				</div>
			</div>
		</form>
	</div>
	<div class="modal fade" tabindex="-1" role="dialog"
		aria-labelledby="imgUploadModalLabel" aria-hidden="true"
		id="imgUpload">
		<form name="frmImgUpload" id="fImgUpload"
			action="airest/services/image/upload" enctype="multipart/form-data">
			<div class="modal-dialog modal-sm">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title pull-left">Image Search</h4>
						<button type="button" class="close pull-right" aria-label="Close"
							data-dismiss="modal">
							<span aria-hidden="true"><i
								class="glyphicon glyphicon-remove"></i></span>
						</button>
					</div>
					<div class="modal-body">
						<div ng-class="fileUpload.input">
							<input type="file" accept="image/*"
								onchange="angular.element( this ).scope().uploadImg( this.files )">
						</div>
						<div ng-class="fileUpload.loader">
							<div class="text-center">
								<i class="fa fa-spinner fa-spin" style="font-size: 72px;"></i>
							</div>
						</div>
						<div ng-class="fileUpload.statusError">There is an issue
							with this file. Please upload another.</div>
					</div>
				</div>
			</div>
		</form>
	</div>
</body>
</html>
