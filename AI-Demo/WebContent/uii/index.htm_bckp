<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<script>
showInfo('info_start');
var final_transcript = '';
var recognizing = false;
var ignore_onend;
var start_timestamp;
if (!('webkitSpeechRecognition' in window)) {
  upgrade();
} else {
  start_button.style.display = 'inline-block';
  var recognition = new webkitSpeechRecognition();
  recognition.continuous = true;
  recognition.interimResults = true;
  recognition.onstart = function() {
    recognizing = true;
    showInfo('info_speak_now');
    start_img.src = 'mic-animate.gif';
  };
  recognition.onerror = function(event) {
    if (event.error == 'no-speech') {
      start_img.src = 'mic.gif';
      showInfo('info_no_speech');
      ignore_onend = true;
    }
    if (event.error == 'audio-capture') {
      start_img.src = 'mic.gif';
      showInfo('info_no_microphone');
      ignore_onend = true;
    }
    if (event.error == 'not-allowed') {
      if (event.timeStamp - start_timestamp < 100) {
        showInfo('info_blocked');
      } else {
        showInfo('info_denied');
      }
      ignore_onend = true;
    }
  };
  recognition.onend = function() {
    recognizing = false;
    if (ignore_onend) {
      return;
    }
    start_img.src = 'mic.gif';
    if (!final_transcript) {
      showInfo('info_start');
      return;
    }
    showInfo('');
    if (window.getSelection) {
      window.getSelection().removeAllRanges();
      var range = document.createRange();
      range.selectNode(document.getElementById('final_span'));
      window.getSelection().addRange(range);
    }
	var question = document.getElementById('final_span').innerText;
	var url= "https://www.google.com/search?source=hp&q="+question;
	window.location = url;
  };
  recognition.onresult = function(event) {
    var interim_transcript = '';
    for (var i = event.resultIndex; i < event.results.length; ++i) {
      if (event.results[i].isFinal) {
        final_transcript += event.results[i][0].transcript;
      } else {
        interim_transcript += event.results[i][0].transcript;
      }
    }
    final_transcript = capitalize(final_transcript);
    final_span.innerHTML = linebreak(final_transcript);
    interim_span.innerHTML = linebreak(interim_transcript);
    if (final_transcript || interim_transcript) {
      showButtons('inline-block');
    }
  };
}
function upgrade() {
  start_button.style.visibility = 'hidden';
  showInfo('info_upgrade');
}
var two_line = /\n\n/g;
var one_line = /\n/g;
function linebreak(s) {
  return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
}
var first_char = /\S/;
function capitalize(s) {
  return s.replace(first_char, function(m) { return m.toUpperCase(); });
}
function startButton(event) {
  if (recognizing) {
    recognition.stop();
    return;
  }
  final_transcript = '';
  recognition.start();
  ignore_onend = false;
  final_span.innerHTML = '';
  interim_span.innerHTML = '';
  start_img.src = 'mic-slash.gif';
  showInfo('info_allow');
  showButtons('none');
  start_timestamp = event.timeStamp;
}
function showInfo(s) {
  if (s) {
    for (var child = info.firstChild; child; child = child.nextSibling) {
      if (child.style) {
        child.style.display = child.id == s ? 'inline' : 'none';
      }
    }
    info.style.visibility = 'visible';
  } else {
    info.style.visibility = 'hidden';
  }
}
var current_style;
function showButtons(style) {
  if (style == current_style) {
    return;
  }
  current_style = style;
  
}
</script>
<style>
  * {
    font-family: Verdana, Arial, sans-serif;
  }
  a:link {
    color:#000;
    text-decoration: none;
  }
  a:visited {
    color:#000;
  }
  a:hover {
    color:#33F;
  }
  .button {
    background: -webkit-linear-gradient(top,#008dfd 0,#0370ea 100%);
    border: 1px solid #076bd2;
    border-radius: 3px;
    color: #fff;
    display: none;
    font-size: 13px;
    font-weight: bold;
    line-height: 1.3;
    padding: 8px 25px;
    text-align: center;
    text-shadow: 1px 1px 1px #076bd2;
    letter-spacing: normal;
  }
  .center {
    padding: 10px;
    text-align: center;
  }
  .final {
    color: black;
    padding-right: 3px; 
  }
  .interim {
    color: gray;
  }
  .info {
    font-size: 14px;
    text-align: center;
    color: #777;
    display: none;
  }
  .right {
    float: right;
  }
  .sidebyside {
    display: inline-block;
    width: 45%;
    min-height: 40px;
    text-align: left;
    vertical-align: top;
  }
  #headline {
    font-size: 40px;
    font-weight: 300;
  }
  #info {
    font-size: 20px;
    text-align: center;
    color: #777;
    visibility: hidden;
  }
  #results {
    font-size: 14px;
    font-weight: bold;
    border: 1px solid #ddd;
    padding: 15px;
    text-align: left;
    min-height: 150px;
  }
  #start_button {
    border: 0;
    background-color:transparent;
    padding: 0;
  }
</style>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
	<meta charset="UTF-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>AI POC</title>
	<!--
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.0/css/font-awesome.css" />
	
	<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular-sanitize.min.js"></script>
	<script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-1.3.3.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
	-->
	<link rel="stylesheet" href="resc/bootstrap.min.css">
	<link rel="stylesheet" href="resc/font-awesome.css" />
	<link rel="stylesheet" href="resc/theme.css" />
	<script src="resc/angular.min.js"></script>
	<script src="resc/angular-sanitize.min.js"></script>
	<script src="resc/ui-bootstrap-tpls-2.5.0.min.js"></script>
	<script src="resc/jquery.min.js"></script>
	<script src="resc/bootstrap.min.js"></script>
	<script>
		'use strict';
		angular.module('appSolr', ['ui.bootstrap','ngSanitize'])
			.controller('ctrlSolrResults', function($scope, $http, $sce) {
				$scope.caseFormDisplay = false;
				$scope.searchURL = '/AI/jsps/searchWrapper.jsp';
				$scope.recURL = '/AI/jsps/recWrapper.jsp';
				$scope.recCaro = { interval: 5000, wrap: false };
				// options related to typeahead
				$scope.modelOptions = {
					debounce: {	default: 500, blur: 250 }
				};
				$scope.pageBack = 'landing';
				// guid generator to be used for creating a searchID for each search session
				$scope.guidGen = function() {
					var strOut = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
						var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
						return v.toString(16);
					});
					return strOut;
				};
				// this is a generic set of preferences and params used in SOLR requests
				$scope.config = {
					jsonpCallbackParam: 'JSON_CALLBACK',
					headers: { },
					// standard query params
					params: { q: '', start: 0, count: 10, sortField: 'score', filterQuery: '', searchId: $scope.guidGen(), callback: 'JSON_CALLBACK', sortBy: 'desc', ml: true },
					pref : { pageLayout: 'normal', container: 'container-fluid', fontSize: 1.3, docId: '', user: '1', filters: { display: false, type: 'left' } }
				};
				// stores selected filters
				$scope.aq = [];
				$scope.details = { response: { numfound:0 } };

				// not currently in use, for a future feature
				/*
				$scope.layouts = {
					left: { filterColumn: 'col-xs-12 col-sm-4 col-md-3 hidden-xs', resultsColumn: 'col-xs-12 col-sm-8 col-md-9', tileColumns: 2},
					filterBar: { filterColumn: 'hidden', resultsColumn: 'col-xs-12', tileColumns: 3},
					none: { filterColumn: 'hidden', resultsColumn: 'col-xs-12', tileColumns: 3}
				};
				*/
				$scope.detailColsDefault = {col1:'col-sm-4 col-md-3 hidden-xs',col2:'col-xs-12 col-sm-8 col-md-9'};
				$scope.detailColsOneResult = {col1:'hidden',col2:'col-xs-12'};
				$scope.detailCols = angular.copy($scope.detailColsDefault);

				$scope.filterCollapsed=[true,true,true,true,true];
				prefLoad();		
				$scope.$watch('config.params', function() { fetch(); }, true); // perform a search when some aspect of the search model changes
				$scope.$watch('config', function() { prefSave(); }, true); // save preferences when some aspect of preference changes, as these are both in what goes to the search api and purely UI elements, we are observing the entire config model
				
				// pagination related variables and functions
				$scope.total = 0; // default the number of results to 0
				$scope.pagination = { currentPage:  1 }; // default the page we are on to 1
				// function to alter the page we are on when the user clicks one of the pagination buttons
				$scope.pageChanged = function() {
					$scope.config.params.start = ($scope.pagination.currentPage==1) ? 0 : ($scope.pagination.currentPage-1)*$scope.config.params.count;
				};
				// what is the highest result number on the page
				$scope.pageMax = function() {
					return ((($scope.pagination.currentPage*$scope.config.params.count))>$scope.total) ? $scope.total : ($scope.pagination.currentPage*$scope.config.params.count);
				};
				
				
				$scope.formatDate = function(date){
					return (Object.prototype.toString.call(new Date(date)) === "[object Date]") ? new Date(date) : new Date(date.split("-").join("/"));
				};
				function prefLoad() {
					//console.log($scope.layouts['left']);
					var strSrchPrefCookie = getCookie('srchPref');
					if (null!=strSrchPrefCookie && strSrchPrefCookie.length>0) {
						$scope.config = JSON.parse(strSrchPrefCookie);
						$scope.config.params.searchId = $scope.guidGen();
						//console.log(strSrchPrefCookie);
					}	
				}
				function prefSave() {
					if ($scope.config) {
						// don't save the question or filter
						var objPref = angular.copy($scope.config);
						objPref.params.q='';
						objPref.params.filterQuery='';
						objPref.pref.docId='';
						objPref.params.searchId='';
						setCookie('srchPref',JSON.stringify(objPref),7);
					}
				}
				$scope.caseFormInit = function() { 
					if ($scope.details && $scope.details.facet_counts && $scope.details.facet_counts.facet_fields) $scope.filterFields = angular.copy($scope.details.facet_counts.facet_fields);
					$scope.caseFormDisplay = true;
				};
				$scope.caseFormDestroy = function() { 
					$scope.caseFormDisplay = false;
					//console.log($scope.caseFormDisplay);
				};
				function fetch() {
					if ($scope.config.params && $scope.config.params.q.length>0) {
						$scope.pageBack = '';
						if ($scope.config.params.start===0) $scope.pagination.currentPage = 1;
						$http.jsonp($scope.searchURL,$scope.config)
							.then(function(response) {
								if ($scope.detail) $scope.detail = null;
								$scope.total = response.data.response.numFound;
								$scope.details = response.data;
								// if there is only one response, let's jump directly to it
								if (response.data.response.numFound===1)  {
									$scope.detailCols = angular.copy($scope.detailColsOneResult);
									$scope.detail = response.data.response.docs[0];
									fetchRec(response.data.response.docs[0].id);
								} else {
									$scope.detailCols = angular.copy($scope.detailColsDefault);
								}
							});
					}
				}
				fetchRec(''); // retreive user recommendations when page is first loaded
				function fetchRec(itemId) {
					$scope.recs = null;
					var confRec = { params: { callback: 'JSON_CALLBACK' } };
					if (null==itemId || ''==itemId) {
						confRec.params.userId = $scope.config.pref.user; 
					} else {
						confRec.params.itemId = itemId;
					}
					$http.jsonp($scope.recURL,confRec)
						.then(function(response) {
							var ids = '';
							for(var i=0;i<response.data.length;i++) {
								ids += 'id:'+ ((response.data[i].itemId) ? response.data[i].itemId : response.data[i].recItemId) +' or ';
							}
							if (ids.length>0) {
								
								ids = ids.substring(0,ids.length-4);
								var confDocs = { params: { recs: ids, callback: 'JSON_CALLBACK' } };
								$http.jsonp($scope.searchURL,confDocs)
									.then(function(response) {
										$scope.recs = response.data;
										console.log('hhhhh');
										console.log($scope.recs);
									});
							} 
						});
					
				}
				$scope.fetchDetail = function(id){
					if (null!=id) {
						$scope.config.pref.docId = id;
						$scope.rsltsStart = (id-2>-1) ? id-2 : 0;
						$scope.rsltsEnd = $scope.rsltsStart+5;
						$scope.detail = $scope.details.response.docs[id];
						fetchRec($scope.detail.id);
			
						// track this clickthrough
						var clickConfig = { 
							params: { linkPosition: id, title: $scope.detail.title, docId: $scope.detail.id, searchId: $scope.config.params.searchId}
						};
						
						$http.get('/AI/jsps/clickthrough.jsp',clickConfig)
							.then(function(response) {
								//console.log(response.data);
							});
					} 
				};
				$scope.fetchDetailRemote = function(id){
					if (null!=id) {
						fetchRec(id);
						var conf = { params: { id: id, callback: 'JSON_CALLBACK', searchId: $scope.config.params.searchId } };
						$http.jsonp($scope.searchURL,conf)
							.then(function(response) {
								$scope.detail = response.data.response.docs[0];
							});			
					} 
				};
				$scope.detailClear = function(){ $scope.detail=''; $scope.config.pref.docId=''; $scope.recs=null; };
				$scope.setParam = function(param,val) {
					$scope.config.params.start=0;
					$scope.currentPage = 0;
					if(param=='pageLayout') {
						$scope.config.pref.pageLayout = val;
					} else if(param=='sortField') {
						$scope.config.params.sortField = val;
					} else if(param=='count') {
						$scope.config.params.count = val;
					} else if(param=='container') {
						$scope.config.pref.container = val;
					} else if(param=='user') {
						$scope.config.pref.user = val;
					} else if(param=='ml') {
						$scope.config.params.ml = val;
					}
				};
				$scope.toggleAQ = function(param,val) {
					$scope.config.params.start=0;
					if (!$scope.aq[param]) $scope.aq[param]=[]; 
			
					if ($scope.aq[param].indexOf(val)>-1) {
						var numValLoc = $scope.aq[param].indexOf(val);
						$scope.aq[param].splice(numValLoc,1);
					} else {
						$scope.aq[param].splice($scope.aq[param],0,val);
					}
					$scope.config.params.filterQuery = aqToString();
				};
				function aqToString() {
					//{!tag=doc}docType:("FAQ") AND {!tag=kb}kbType:("Knowledge Base" OR "YouTube")
					var strOut = '';
					if (fnObjSize($scope.aq)>0) {
						var key;
						for (key in $scope.aq) {
							if ($scope.aq[key].length>0) {
								var strChildren = '';
								for (var kid in $scope.aq[key]) strChildren += '"' + $scope.aq[key][kid] + '" OR ';
								strOut += '{!tag=' + key.replace('Type','') + '}' + key+ ':(' + strChildren.slice(0,-4) + ')';
							}
							strOut += ' AND ';
						}
						strOut = strOut.slice(0,-4);
					} 
					return strOut;
				}
				$scope.resultIndex = function(val) {
					var indexArray = $scope.details.response.docs.map(function(o){return o.id;});
					var resultIndex = indexArray.indexOf(val);
					return resultIndex;
				};
				$scope.select = function() {
					this.setSelectionRange(0, this.value.length);
				}
				$scope.validSearchFilter = function(val){ 
					return (null!= val && val.count>0) ? true : null; 
				}
				$scope.fetchSuggestion = function(val) {
					return $http.jsonp($scope.searchURL, {
						params: {q: val+'*', callback: 'JSON_CALLBACK'}
					}).then(function(data){
						return data.data.response.docs.map(function(item){
							return item.title;
						});
					});
				};
				$scope.trustSrc = function(src) {
					if (src.indexOf('youtube')>0) src = src.replace('watch?v=','embed/');
					return $sce.trustAsResourceUrl(src);
				};
				$scope.movieStars = function(num) {
					var stars = '';
					var numStarsRemaining = 5;
					var numWholeStars = Math.round(num/2);
					var binHalfStar = ((Math.round((num/2)*10)/10) % 1)>4;
					for (var i=0;i<numWholeStars;i++) { stars += '<i class="fa fa-star"></i>'; numStarsRemaining--; }
					if (binHalfStar) { stars += '<i class="fa fa-star-half-o"></i>'; numStarsRemaining--; }
					for (var i=0;i<numStarsRemaining;i++) stars += '<i class="fa fa-star-o"></i>';
					
					return stars;
				};	
			})
			.directive("rsltPanel", function() {
				return {
				
					template : '<div class="panel panel-default"><div class="panel-body"><img src="{{rslt.thumbnailImage}}" class="pull-right" style="max-width: 45px" ng-if="rslt.thumbnailImage" /><h3 class="panel-title"><a ng-click="fetchDetail(pos)">{{rslt.title}}</a></h3><rslt-meta rslt="rslt"></rslt-meta><p class="mb-1 excerpt" ng-bind-html="rslt.body.shortDescription"></p></div></div>',
					link: function (scope, element, attrs) {
						if(attrs.rslt){
							scope.rslt = scope.$eval(attrs.rslt);
						}
						if(attrs.pos){
							scope.pos = scope.$eval(attrs.pos);
						}
					}
				};
			})
			.directive("rsltMeta", function() {
				return {
					templateUrl : 'rsltMeta.htm',
					link: function (scope, element, attrs) {
						if(attrs.rslt) {
							// put entire result into this directive's scope
							scope.rslt = scope.$eval(attrs.rslt);
							scope.num = Math.round((scope.rslt.vote_average/2)*10)/10;
							scope.stars = scope.movieStars(scope.rslt.vote_average);
						}
					}
				};
			})
			.directive("rsltMovie", function() {
				return {
					templateUrl : 'rsltMovie.htm',
					link: function (scope, element, attrs) {
						if(attrs.rslt) 
							scope.rslt = scope.$eval(attrs.rslt);
					}
				};
			})
			.directive("rsltExcerpt", function() {
				return {
					template : '<p ng-bind-html="rslt.body.shortDescription"></p>',
					link: function (scope, element, attrs) {
						if(attrs.rslt) scope.rslt = scope.$eval(attrs.rslt);
						/*
						if(attrs.highlight && attrs.highlight.length>0) {
							var tmpObj = scope.$eval(attrs.highlight);
							if (tmpObj[scope.rslt.id] && tmpObj[scope.rslt.id].content) scope.rslt.excerpt = tmpObj[scope.rslt.id].content;
						}
						*/
					}
				};
			});
			// cookie methods to power the storing and reading of preferences
			function setCookie(cname,cvalue,exdays) {
				let d = new Date();
				d.setTime(d.getTime() + (exdays*24*60*60*1000));
				let expires = "expires=" + d.toString();
				document.cookie = cname+"="+cvalue+"; "+expires;
			}

			function getCookie(cname) {
				let name = cname + "=";
				let ca = document.cookie.split(';');
				for(let i=0; i<ca.length; i++) {
					let c = ca[i];
					while (c.charAt(0)==' ') {
						c = c.substring(1);
					}
					if (c.indexOf(name) == 0) {
						return c.substring(name.length, c.length);
					}
				}
				return "";
			}
			function fnObjSize(obj) { var size = 0, key; for (key in obj) { if (obj.hasOwnProperty(key)) size++; } return size; }

	</script>
	<style>
		.row { margin: 12px 0px}
		.collapsable {
			display: inline-block;
			overflow: hidden;
			height: 0;
			transition: height 1s;
			-webkit-transition: height 1s;        
			-moz-transition: height 1s;        
			-o-transition: height 1s;         
		}
		.collapsable.showMe { height: 100%; }
		@media (min-width: 992px) {
		   .equal{  
				display: -webkit-box;
				display: -moz-box;
				display: -ms-flexbox;
				display: -webkit-flex;
				display: flex;
			}
		}
		#head { background: #151515; padding: 0px; margin: 0px; border-bottom: 1px solid #999; }
	</style>
</head>
<body ng-app="appSolr" ng-controller="ctrlSolrResults" style="font-size: {{config.pref.fontSize}}em" ng-class="pageBack">  
<div id="head" class="container-fluid"><img src="resc/logo.png" /><div class="pull-right" id="caseBtn" ng-if="pageBack!='landing'"><button ng-click="caseFormInit()" class="btn btn-default">Create a case</button></div></div>
<div class="{{config.pref.container}}" style="font-size: {{config.pref.fontSize}}em">
	<div class="row" id="searchBox">
		<div class="col-xs-12">
			<div class="input-group search-bar">
				<span class="input-group-btn bar-style">
					<button class="btn btn-default" type="button" id="basic-addon1" data-toggle="modal" data-target="#sSettings">
						<i class="fa fa-cog"></i>&nbsp;
					</button>
				</span>
				<input type="text" id="final_span" ng-model="config.params.q" onclick="select()" class="form-control" placeholder="search phrase" uib-typeahead="title for title in fetchSuggestion($viewValue)" typeahead-min-length="3" typeahead-editable="true" ng-model-options="modelOptions" typeahead-focus-first="false" autofocus />
				<div class="right">
  					<button id="start_button" onclick="startButton(event)">
    					<img id="start_img" src="mic.gif" alt="Start"></button>
				</div>
			
				<span class="input-group-btn bar-style">
					<button class="btn btn-default" type="button" id="qSubmit">
						&nbsp;<i class="fa fa-search"></i>
					</button>
				</span>
			</div>
		</div>
	</div>
	<div ng-if="pageBack==='landing'" class="row">
		<div class="container"><div class="col-xs-12" style="margin-top:50px; color: #fff ; padding-left: 6%;" >
			<h2>Recommended for you</h2>
			<ul class="list-inline">
				<li ng-repeat="record in recs.response.docs" style="text-align: center;"><a ng-click="fetchDetailRemote(record.id)">
				<img src="{{record.largeImage}}" alt="{{record.title}}" title = "{{record.title}}" style="max-width: 200px" /></a><br />
				<h3 style="max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"> {{record.title}}</h3>
				</li>
				
			</ul>
			<!--
			 <div ng-if="recs">
				<div uib-carousel active="active" interval="recCaro.interval" no-wrap="recCaro.wrap">
				  <div uib-slide ng-repeat="slide in recs.response.docs" index="$index" ng-if="slide.backdrop_path">
					<img ng-src="https://image.tmdb.org/t/p/w300/{{slide.backdrop_path}}" style="margin:auto;">
					<div class="carousel-caption">
					  <h4>{{slide.title}}</h4>
					  <p ng-bind-html="movieStars(slide.vote_average)"></p>
					</div>
				  </div>
				</div>
			  </div>
			  -->
		</div></div>
	</div>
	<!-- panel for creating a case -->
	<div ng-if="caseFormDisplay" class="row">
		<div class="col-xs-12 col-sm-6">
			<div class="panel panel-default">
				<div class="panel-heading">Contact Us</div>
				<div class="panel-body">
					<form id="frmContact">
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>
									<input type="text" class="form-control" name="name" id="name"  placeholder="Enter your Name"/>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i class="fa fa-envelope" aria-hidden="true"></i></span>
									<input type="text" class="form-control" name="email" id="email"  placeholder="Enter your Email"/>
								</div>
							</div>
						</div>
						<div class="form-group">
							<div class="cols-sm-10">
								<div class="input-group">
									<span class="input-group-addon"><i class="fa fa-comment-o" aria-hidden="true"></i></span>
									<input type="text" class="form-control" ng-model="config.params.q" name="q" id="q"  placeholder="Enter your Email"/>
								</div>
							</div>
						</div>
						<div class="form-group col-sm-4" ng-repeat="searchFilter in filterFields" ng-if="searchFilter.children.length>0" jq-table ng-if="filterFields[0].field">
							<label class="control-label" for="{{searchFilter.field}}">{{searchFilter.field}}</label>								
							<select name="{{searchFilter.field}}" class="form-control" ng-change="toggleAQ(searchFilter.field,temp[searchFilter.field].name)" ng-model="temp[searchFilter.field]" ng-options="option.name for option in searchFilter.children | filter: validSearchFilter">
								
							</select>						
						</div>
						<div class="form-group">
							<label class="control-label" for="comments">Comments</label>
							<textarea class="form-control" name="comments" id="fComments"  placeholder="Enter your Name"></textarea>
						</div>
						<div class="form-group"><button class="btn btn-primary" ng-click="caseFormDestroy()">Create</button> <button class="btn btn-default" ng-click="caseFormDestroy()">Cancel</button></div>
					</form>
				</div>
			</div>
		</div>
		<div class="col-xs-12 col-sm-6" id="rslts">
			<div class="list-group">
				<div ng-repeat="record in details.response.docs" ng-click="fetchDetail($index)" class="list-group-item">
						<h4 class="group inner list-group-item-heading">
							{{record.title}}</h4>
						<rslt-meta rslt="record"></rslt-meta>
						<p class="group inner list-group-item-text">
							<rslt-excerpt rslt="record" highlight="details.highlighting"></rslt-excerpt></p>
				</div>
			</div>		
		</div>
	</div>	
	<div ng-if="!caseFormDisplay && details.response.numFound > 0 && !detail" class="row">		
		<div class="col-xs-12 col-sm-4 col-md-3 hidden-xs" id="filters">
			<div class="panel panel-default" ng-if="recs" id="recs">
				<div class="panel-heading">Recommended for you</div>
				<!--<div class="list-group">
					<a ng-click="fetchDetailRemote(record.id)" class="list-group-item" ng-repeat="record in recs.response.docs">{{record.title}} (<span ng-bind="formatDate(record.release_date) | date:'yyyy'"></span>) <img src="https://image.tmdb.org/t/p/w300/{{record.poster_path}}" alt="poster" class="pull-right" style="max-width: 25px" /></a>
				</div>-->
				<!--<div class="panel-body"><ul class="list-inline">
					<li ng-repeat="record in recs.response.docs"><a ng-click="fetchDetailRemote(record.id)"><img src="https://image.tmdb.org/t/p/w300/{{record.poster_path}}" alt="poster" style="max-width: 45px" /></a><br />({{record.vote_average}}/10)</li>
				</ul></div>-->
				<div uib-carousel active="active" interval="recCaro.interval" no-wrap="recCaro.wrap">
				  <div uib-slide ng-repeat="slide in recs.response.docs" index="$index" >
					<a ng-click="fetchDetailRemote(slide.id)">
					<img ng-src="{{slide.thumbnailImage}}" style="margin:auto;">
					<div class="carousel-caption">
					  <h4>{{slide.title}}</h4>
					  <p ng-bind-html="movieStars(slide.vote_average)"></p>
					</div>
					</a>
				  </div>
				</div>
			</div>	
			<!-- This is used when filters are in a more usable from in the response -->
			<div class="panel panel-default" ng-repeat="searchFilter in details.facet_counts.facet_fields" ng-if="searchFilter.children.length>0" jq-table ng-if="details.facet_counts.facet_fields[0].field">
				<div class="panel-heading">{{searchFilter.field}}</div>
				<div class="list-group">
					<a ng-click="toggleAQ(searchFilter.field,val.name)" class="list-group-item" ng-repeat="val in searchFilter.children | filter: validSearchFilter | limitTo: 5" ng-class="{active: config.params.filterQuery.indexOf(val.name)>-1}">{{val.name}} <span class="badge" ng-class="{'badge-warning': val.count>30}">{{val.count}}</span></a>
					<a class="list-group-item" data-toggle="modal" data-target="#{{searchFilter.field}}" ng-if="searchFilter.children.length>5">+ More</a>
				</div>
			</div>
			<!-- This is used when filters are in the standard configuration -->
			<div class="panel panel-default" ng-repeat="(key, val) in details.facet_counts.facet_fields" ng-if="val.length>0" jq-table ng-if="details.facet_counts.facet_fields.kbType">
				<div class="panel-heading">{{key}}</div>
				<div class="list-group">
					<a ng-click="toggleAQ(key,filter)" class="list-group-item" ng-repeat="filter in val track by $index" ng-class="{active: config.params.filterQuery.indexOf(filter)>-1}" ng-if="$index % 2 == 0 && val[$index+1]>0">
						{{filter}} <span class="badge" ng-class="{'badge-warning': val[$index+1]>30}">{{val[$index+1]}}</span>
					</a>
				</div>
			</div>
		</div>
		<div class="col-xs-12 col-sm-8 col-md-9" ng-if="config.pref.pageLayout=='normal'" id="rslts">
			<div id="products" class="row list-group">
				
				<div ng-repeat="record in details.response.docs" ng-click="fetchDetail($index)" class="item col-xs-4 col-lg-4 list-group-item">
					<div class="thumbnail">
						<img class="group list-group-image" src="{{record.largeImage}}" alt="poster" style="max-width: 55px" ng-if="record.largeImage && record.largeImage!=''" />
						<div class="caption">
							<h4 class="group inner list-group-item-heading">
								{{record.title}}</h4>
							<rslt-meta rslt="record"></rslt-meta>
							<p class="group inner list-group-item-text">
						
							
						<!--	
						<div ng-repeat="shT in details.highlighting" class="row equal"  >
									hahahahaha - 	{{shT.shortDescription}}
						</div>
						-->
				
							
								<rslt-excerpt rslt="record" highlight="details.highlighting"></rslt-excerpt></p>
						</div>
					</div>
				</div>
				
				
				
			</div>			
			<div class="row">
				<div class="col-xs-12 col-sm-4">Displaying {{config.params.start+1}} to {{pageMax()}} of {{details.response.numFound}} ({{details.responseHeader.QTime/1000}} secs)</div>
				<div class="col-xs-12 col-sm-8"><div ng-show="details.response.numFound > config.params.count" class="pull-right">
					<ul uib-pagination total-items="total" items-per-page="config.params.count" ng-model="pagination.currentPage" ng-change="pageChanged()" max-size="5" class="pagination-sm" rotate="true" previous-text="&lsaquo;" next-text="&rsaquo;" boundary-link-numbers="true"></ul>
				</div></div>
			</div>		
		</div>
		<div class="col-xs-12 col-sm-6 col-md-9" ng-if="config.pref.pageLayout=='tiled'" id="rslts">
			<div ng-repeat="record in details.response.docs" class="row equal"  ng-if="$index % 2 == 0">
				<div class="col-sm-12 col-md-6">
					<rslt-panel rslt="details.response.docs[$index+0]" pos="$index+0" ng-if="details.response.docs[$index+0]"></rslt-panel>
				</div><div class="col-sm-12 col-md-6">
					<rslt-panel rslt="details.response.docs[$index+1]" pos="$index+1" ng-if="details.response.docs[$index+1]"></rslt-panel>
				</div>
			</div>
			<div class="row">
				<div class="col-xs-12 col-sm-4">Displaying {{config.params.start+1}} to {{pageMax()}} of {{details.response.numFound}} ({{details.responseHeader.QTime/1000}} secs)</div>
				<div class="col-xs-12 col-sm-8"><div ng-show="details.response.numFound > config.params.count" class="pull-right">
					<ul uib-pagination total-items="total" items-per-page="config.params.count" ng-model="pagination.currentPage" ng-change="pageChanged()" max-size="5" class="pagination-sm" rotate="true" previous-text="&lsaquo;" next-text="&rsaquo;" boundary-link-numbers="true"></ul>
				</div></div>
			</div>
		</div>
	</div>
	<div ng-if="details.response.numFound==0 && !detail" class="row">No results found</div>  
	<div ng-if="detail" class="row">
		<div class="{{detailCols.col1}}">
			<div class="list-group" ng-if="details.response.numFound>1">
				<a ng-repeat="record in details.response.docs | limitTo: 5 : rsltsStart" ng-click="fetchDetail(resultIndex(record.id))" class="list-group-item" ng-class="{active:record.id===detail.id}">
					{{record.title}} (<span ng-bind="formatDate(record.release_date) | date:'yyyy'"></span>)
				</a>
			</div>
		</div>
		<div class="{{detailCols.col2}}">
			<button class="btn btn-default" ng-click="detailClear()">Close <i class="fa fa-times"></i></button>
			<div class="row">
				<div class="col-xs-8" id="movieDetail">
					<h1>{{detail.title}}</h1>
					<div class="meta">
					<!-- <span ng-bind="formatDate(detail.release_date) | date:short"></span> | <span ng-bind-html="movieStars(detail.vote_average)"></span> -->
					</div>
					{{detail.longDescription}}{{detail.body.longDescription}}
					<dl>
						<dt ng-if="detail.BrandName">BrandName</dt><!--<dt ng-if="detail.BrandName.length()===1">BrandName</dt> -->
						<dd ng-if="detail.BrandName"><span >{{detail.BrandName}}</span></dd>
						<dt ng-if="detail.Subcategory1">Subcategory1</dt><!--<dt ng-if="detail.Subcategory1.length()===1">Subcategory1</dt>-->
						<dd ng-if="detail.Subcategory1"><span >{{detail.Subcategory1}}</span></dd>
						<dt ng-if="detail.Subcategory2">Subcategory2</dt><!--<dt ng-if="detail.Subcategory2.length()===1">Subcategory2</dt>-->
						<dd ng-if="detail.Subcategory2"><span >{{detail.Subcategory2}}</span></dd>
					</dl>
				</div>
				<div class="col-xs-4" >
				<div>
					<img src="{{detail.largeImage}}" alt="poster" class="pull-left poster img-responsive" ng-if="detail.largeImage"/>
				</div>	
					<br/>
				<div style="text-align: center;">
					<i class="glyphicon glyphicon-link" class="hidden-xs"></i>
					<a href="{{detail.productUrl}}" target="_blank"> View Product </a>
				</div>	
						  <!--
						  <button class="btn btn-default" type="button" data-toggle="modal" data-target="#mTrailer">
							<i class="glyphicon glyphicon-link" class="hidden-xs"></i> View Product                              
						  </button>
						  -->
				</div>
			</div>
				<div>
						<h4 style = "font-size: 21px; font-weight: 600;">Recommendations</h4>
						<ul class="list-inline" style="margin-left: -6%; min-width: 100%;">
							<li ng-repeat="record in recs.response.docs" class="ng-scope" style="text-align: center;" ng-if="record.largeImage!='null'"><a ng-click="fetchDetailRemote(record.id)">
							<img src="{{record.largeImage}}" alt="{{record.title}}" style="max-height: 120px; max-width: 200px" title = "{{record.title}}"/></a><hr style="margin-right: -9%;"/><span ng-bind-html="movieStars(record.vote_average)"></span>
							<h3 style="max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: larger;"> {{record.title}}</h3>
							</li>
						</ul>
				</div>
		</div>	
	</div>
  </div>
</div>

<!-- MORE facets overlays -->

<div class="modal fade" tabindex="-1" role="dialog" ng-repeat="searchFilter in details.facet_counts.facet_fields" aria-labelledby="trailerModalLabel" aria-hidden="true" id="{{searchFilter.field}}" ng-if="details.facet_counts.facet_fields && !detail && searchFilter.children.length>0">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">			
			<div class="modal-header">
				<h4 class="modal-title pull-left">{{searchFilter.field}}</h4>
				<button type="button" class="close pull-right" aria-label="Close" data-dismiss="modal">
					<span aria-hidden="true"><i class="glyphicon glyphicon-remove"></i></span>
				</button>
			</div>
			<div class="modal-body">
				<div ng-repeat="val in searchFilter.children | filter: validSearchFilter" class="row equal"  ng-if="$index % 3 == 0">
					<div class="col-xs-12 col-sm-4" ng-if="searchFilter.children[$index+0].name && searchFilter.children[$index+0].count>0">
						<button class="btn btn-default" ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+0].name)>-1}" ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+0].name)" data-dismiss="modal">{{searchFilter.children[$index+0].name}} <span class="badge">{{searchFilter.children[$index+0].count}}</span></button>						
					</div><div class="col-xs-12 col-sm-4" ng-if="searchFilter.children[$index+1].name && searchFilter.children[$index+1].count>0">
						<button class="btn btn-default" ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+1].name)>-1}" ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+1].name)" data-dismiss="modal">{{searchFilter.children[$index+1].name}} <span class="badge">{{searchFilter.children[$index+1].count}}</span></button>						
					</div><div class="col-xs-12 col-sm-4" ng-if="searchFilter.children[$index+2].name && searchFilter.children[$index+2].count>0">
						<button class="btn btn-default" ng-class="{active: config.params.filterQuery.indexOf(searchFilter.children[$index+2].name)>-1}" ng-click="toggleAQ(searchFilter.field,searchFilter.children[$index+2].name)" data-dismiss="modal">{{searchFilter.children[$index+2].name}} <span class="badge">{{searchFilter.children[$index+2].count}}</span></button>						
					</div>
				</div>

				<!--<a  class="list-group-item"  ng-class="{active: config.params.filterQuery.indexOf(val.name)>-1}">{{val.name}} <span class="badge" ng-class="{'badge-warning': val.count>30}">{{val.count}}</span></a>-->
				
			</div>			
		</div>
	</div>
</div>

<!-- MOVIE trailer overlay -->
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="trailerModalLabel" aria-hidden="true" id="mTrailer" ng-if="detail.trailerVideoUrl">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title pull-left">{{detail.title}}</h4>
				<button type="button" class="close pull-right" aria-label="Close" data-dismiss="modal">
					<span aria-hidden="true"><i class="glyphicon glyphicon-remove"></i></span>
				</button>
			</div>
			<div class="modal-body">
				<div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" width="560" height="315" ng-src="{{trustSrc(detail.trailerVideoUrl[0])}}" frameborder="0" allowfullscreen></iframe></div>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="searchSettingsModalLabel" aria-hidden="true" id="sSettings">
	<form name="frmPref" id="fPref">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title pull-left">Search settings</h4>
				<button type="button" class="close pull-right" aria-label="Close" data-dismiss="modal">
					<span aria-hidden="true"><i class="glyphicon glyphicon-remove"></i></span>
				</button>
			</div>
			<div class="modal-body">
				<dl>
					<dd><button class="btn btn-success" ng-if="config.params.ml==false" ng-model="config.params.ml" value="true" ng-click="setParam('ml',true)">Enable ML</button><button class="btn btn-danger" ng-if="config.params.ml==true" ng-model="config.params.ml" value="false" ng-click="setParam('ml',false)">Disable ML</button></dd>
					<dt>Sort by</dt> 
					<dd>
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" ng-click="setParam('sortField','score')" ng-class="{'active': config.params.sortField == 'score'}">
								<input type="radio" name="sortField" ng-model="config.params.sortField" value="score" autocomplete="off" />Most Relevant
							</label>
							<label class="btn btn-default" ng-click="setParam('sortField','vote_average')" ng-class="{'active': config.params.sortField == 'vote_average'}">
								<input type="radio" name="sortField" ng-model="config.params.sortField" value="vote_average" autocomplete="off" />Stars
							</label>
							<label class="btn btn-default" ng-click="setParam('sortField','release_date')" ng-class="{'active': config.params.sortField == 'release_date'}">
								<input type="radio" name="sortField" ng-model="config.params.sortField" value="release_date" autocomplete="off" />Date
							</label>
						</div>
					</dd>
					<dt>Results per page</dt>
					<dd>
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" ng-click="setParam('count','10')" ng-class="{'active': config.params.count == '10'}">
								<input type="radio" name="perPage" ng-model="config.params.count" value="10" autocomplete="off" checked />10
						</label>
							<label class="btn btn-default" ng-click="setParam('count','25')" ng-class="{'active': config.params.count == '25'}">
								<input type="radio" name="perPage" ng-model="config.params.count" value="25" autocomplete="off" />25
							</label>
							<label class="btn btn-default" ng-click="setParam('count','50')" ng-class="{'active': config.params.count == '50'}">
								<input type="radio" name="perPage" ng-model="config.params.count" value="50" autocomplete="off" />50
							</label>
							<label class="btn btn-default" ng-click="setParam('count','100')" ng-class="{'active': config.params.count == '100'}">
								<input type="radio" name="perPage" ng-model="config.params.count" value="100" autocomplete="off" />100
							</label>
						</div>
					</dd>
					<dt>Layout</dt> 
					<dd>
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" ng-click="setParam('pageLayout','normal')" ng-class="{'active': config.pref.pageLayout == 'normal'}" tooltip-placement="bottom" uib-tooltip="Normal">
								<input type="radio" name="pageLayout" ng-model="config.pref.pageLayout" value="normal" autocomplete="off" checked /> <i class="glyphicon glyphicon-th-list"></i>
							</label>
							<label class="btn btn-default" ng-click="setParam('pageLayout','tiled')" ng-class="{'active': config.pref.pageLayout == 'tiled'}" tooltip-placement="bottom" uib-tooltip="Tiled">
								<input type="radio" name="pageLayout" ng-model="config.pref.pageLayout" value="tiled" autocomplete="off" /> <i class="glyphicon glyphicon-th"></i>
							</label>
						</div>
					</dd>
					<dt>Width</dt> 
					<dd>
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" ng-click="setParam('container','container')" ng-class="{'active': config.pref.container == 'container'}" tooltip-placement="bottom" uib-tooltip="Page has significant gutters at most screen widths">
								<input type="radio" name="container" ng-model="config.pref.container" value="container" autocomplete="off" checked /> Inset
							</label>
							<label class="btn btn-default" ng-click="setParam('container','container-fluid')" ng-class="{'active': config.pref.container == 'container-fluid'}" tooltip-placement="right" uib-tooltip="Small gutters at all screen widths">
								<input type="radio" name="container" ng-model="config.pref.container" value="container-fluid" autocomplete="off" /> Full
							</label>
						</div>
					</dd>
					<dt>User</dt>
					<dd>
						<div class="btn-group" data-toggle="buttons">
							<label class="btn btn-default" ng-click="setParam('user','1')" ng-class="{'active': config.pref.user == '1'}">
								<input type="radio" name="perPage" ng-model="config.pref.user" value="1" autocomplete="off" checked />1
							</label>
							<label class="btn btn-default" ng-click="setParam('user','2')" ng-class="{'active': config.pref.user == '2'}">
								<input type="radio" name="perPage" ng-model="config.pref.user" value="2" autocomplete="off" />2
							</label>
							<label class="btn btn-default" ng-click="setParam('user','3')" ng-class="{'active': config.pref.user == '3'}">
								<input type="radio" name="perPage" ng-model="config.pref.user" value="3" autocomplete="off" />3
							</label>
							<label class="btn btn-default" ng-click="setParam('user','4')" ng-class="{'active': config.pref.user == '4'}">
								<input type="radio" name="perPage" ng-model="config.pref.user" value="4" autocomplete="off" />4
							</label>
						</div>
					</dd>
					<dt>Font size</dt> 
					<dd>
						<input id="sFontSize" ng-model="config.pref.fontSize" type="range" min="1" max="2" step="0.1" />
					</dd>
				</dl>
			</div>
		</div>
	</div>
	</form>
</div>

</body>
</html>
